import {
  Button,
  Card,
  Col,
  Flex,
  Form,
  Input,
  message,
  notification,
  Row,
  Space,
  Typography,
  Alert,
  Spin,
  Divider,
  Avatar,
  Progress,
} from "antd";
import { useRef, useState } from "react";
import { useNavigate } from "react-router-dom";
import {
  PlusSquareOutlined,
  DeleteOutlined,
  DeleteFilled,
  UserOutlined,
  CheckOutlined,
  CloseOutlined,
} from "@ant-design/icons";
import MemoizedTinyMce from "../../../components/clients/tinyEditor";
import { createMyCv } from "../../../services/clients/myCvsApi";
import banner from "/images/banner-cv.png";
import DropCvModal from "./DropCvModal";
import "./reviewCv.scss"
import { Spark, Spark2, Suggestion } from "../../../components/clients/customIcon";

const ReviewCv = () => {
  const [api, contextHolder] = notification.useNotification();
  const [loadingSubmit, setLoadingSubmit] = useState(false);
  const [form] = Form.useForm();
  const { Text, Title, Link } = Typography;
  const navigate = useNavigate();

  const [open, setOpen] = useState(false);

  const defaultValue = {
    fullName: "",
    email: "",
    phone: "",
    address: "",
    position: "",
    objective: "",
    skills: [],
    experiences: [],
    educations: [],
    awards: [],
    certifications: [],
    activities: [],
    projects: [],
  };

  const handleForm = async (values) => {
    console.log("üöÄ ~ CreateCv ~ values:", values);
    setLoadingSubmit(true);
    try {
      const result = await createMyCv(values);
      if (result.code === 200) {
        const idCv = result.data._id;

        api.success({
          message: `Success`,
          description: (
            <>
              <i>{result.success}</i>
            </>
          ),
        });

        navigate(`/xem-cv/${idCv}`);
      } else {
        api.error({
          message: <span style={{ color: "red" }}>Th·∫•t b·∫°i</span>,
          description: (
            <>
              <i>{result.error}</i>
            </>
          ),
        });
      }
    } catch (error) {
      console.log("üöÄ ~ handleForm ~ error:", error);
    }
    setLoadingSubmit(false);
  };

const handleImportCv = (values) => {
  if (!values) return;

  // Format skills
  const skills = values.skills?.map(skill => ({
    skill_name: skill
  })) || [];

  const newValues = { ...values, skills };

  // Duy·ªát qua t·ª´ng ph·∫ßn t·ª≠ trong newValues
  for (const key in newValues) {
    newValues[key] = newValues[key]?.map?.(item => {
      if (item?.description) {
        const descriptions = item.description
          .split(".")
          .map(desc => desc.trim())
          .filter(desc => desc);

        const htmlList = `<ul>${descriptions.map(d => `<li>${d}</li>`).join("")}</ul>`;

        return {
          ...item,
          description: htmlList
        };
      }
      return item;
    }) || newValues[key];
  }

  console.log("üöÄ ~ handleImportCv ~ newValues:", newValues)

  form.setFieldsValue(newValues);
};

const conicColors = {
  '0%': 'rgb(255, 98, 0)',
  '40%': 'rgb(253, 185, 46)',
  '70%': 'rgb(220, 30, 175)',
};

  return (
    <>
      {contextHolder}
      <div className="section-review-cv cb-section cb-section-padding-bottom bg-grey2">
        <div className="container">
          <div style={{ maxWidth: 1000, margin: "0 auto"}}>
            <Space direction="vertical" size={"large"} style={{width: "100%"}}>
              <Flex vertical>
                <div className="box-overview-cv__banner box-settings-info__banner" style={{ zIndex: 1 }}>
                  <div className="left">
                    <h1 className="title">
                      Ph√¢n t√≠ch m·ª©c ƒë·ªô ph√π h·ª£p v·ªõi c√¥ng vi·ªác
                    </h1>
                    <h2 className="sub-title">
                      <div><Spark /></div>
                      <span>UTEM AI</span>
                    </h2>
                  </div>
                <div>
                    <Spark2 />
                  </div>
                </div>
                <Card
                  style={{
                    borderTopRightRadius: 0,
                    borderTopLeftRadius: 0,
                    border: 0,
                  }}
                >
                  <Flex className="mb-2" style={{width: "100%"}}>
                    <Flex vertical style={{width: "100%", marginBottom: 40}} gap={10}>
                      <Title level={5}>Th√¥ng tin h·ªì s∆°</Title>
                      <Flex gap={12}>
                        <Avatar style={{background: "#fff", color: "#c9c9c9", border: "2px solid #E1E3E8"}} shape="square" size={70} icon={undefined || <UserOutlined />} src={undefined}/>
                        <Flex vertical style={{}}>
                          <Text strong style={{fontSize: 18}}>Phat Dang</Text>
                          <Text style={{fontSize: 16}}>L·∫¨P TR√åNH VI√äN</Text>
                          <Text style={{fontSize: 16}}>Nguyen Thi Tuyet Mai (CV).pdf</Text>
                        </Flex>
                      </Flex>
                    </Flex>
                    <div>
                      <Divider type="vertical" style={{height: "100%"}}/>
                    </div>
                    <Flex vertical style={{width: "100%", marginLeft: 15}} gap={10}>
                      <Title level={5}>ƒê√°nh gi√° cho v·ªã tr√≠</Title>
                      <Flex gap={12}>
                        <Avatar style={{background: "#fff", color: "#c9c9c9", border: "2px solid #E1E3E8"}} shape="square" size={70} icon={undefined || <UserOutlined />} src={undefined}/>
                        <Flex vertical style={{}}>
                          <Link style={{fontSize: 18}}>Entity Data Management Associate</Link>
                          <Text style={{fontSize: 16}}>PwC (Vietnam) Ltd.</Text>
                          <Text style={{fontSize: 16}}>Th∆∞∆°ng l∆∞·ª£ng</Text>
                        </Flex>
                      </Flex>
                    </Flex>
                  </Flex>
                  <Title level={2} style={{fontSize: 28, fontWeight: 600}}>ƒê√°nh gi√° chung: 78% Cao</Title>
                  <div style={{width: "100%", background: "#F8F9FA", padding: "15px 5px 0px", borderRadius: 14}}>
                    <Flex gap={5} style={{paddingLeft: 7}}>
                      <div><Spark color={"#FF7D55"}/></div>
                      <Title level={5}>Nh·∫≠n x√©t h·ªì s∆° v·ªõi y√™u c·∫ßu c√¥ng vi·ªác</Title>
                    </Flex>
                    <Space>
                      <ul>
                        <li>B·∫°n c√≥ k·ªπ nƒÉng ph√¢n t√≠ch d·ªØ li·ªáu v·ªØng ch·∫Øc v√† th√†nh th·∫°o SQL c√πng c√°c c√¥ng c·ª• tr·ª±c quan h√≥a d·ªØ li·ªáu nh∆∞ Tableau.</li>
                        <li>Kinh nghi·ªám l√†m vi·ªác trong c√°c v·ªã tr√≠ nghi√™n c·ª©u v√† qu·∫£n l√Ω t√†i kho·∫£n th·ªÉ hi·ªán kh·∫£ nƒÉng x·ª≠ l√Ω d·ªØ li·ªáu v√† nghi√™n c·ª©u th√¥ng tin. Kinh nghi·ªám l√†m vi·ªác trong c√°c v·ªã tr√≠ nghi√™n c·ª©u v√† qu·∫£n l√Ω t√†i kho·∫£n th·ªÉ hi·ªán kh·∫£ nƒÉng x·ª≠ l√Ω d·ªØ li·ªáu v√† nghi√™n c·ª©u th√¥ng tin.</li>
                      </ul>
                    </Space>
                  </div>
                </Card>
              </Flex>

              <Card
                className="box-review"
              >
                <div className="box-review__title">
                  <Title level={1} className="box-review__title-text">K·ªπ nƒÉng c√¥ng vi·ªác</Title>
                </div>
                <Flex gap={10}>
                  <Flex style={{width: "45%"}} align="center" justify="center">
                    <Progress strokeWidth={8} strokeColor={"#FF7D55"} strokeLinecap="round" size={200} type="circle" percent={75} format={(percent) => (<Flex vertical><span>{percent}%</span><Title level={5}>Ph√π h·ª£p</Title></Flex>)}/>
                  </Flex>
                  <Space className="box-review__summary" direction="vertical" size={"middle"}>
                    <Flex align="center" gap={7} className="box-review__summary-item">
                      <CheckOutlined className="box-review__summary-icon--checked"/>
                      <Text className="box-review__summary-text">C√≥ b·∫±ng C·ª≠ nh√¢n Qu·∫£n tr·ªã Kinh doanh v·ªõi chuy√™n ng√†nh Qu·∫£n l√Ω C√¥ng ngh·ªá v√† ƒê·ªïi m·ªõi. C√≥ b·∫±ng C·ª≠ nh√¢n Qu·∫£n tr·ªã Kinh doanh v·ªõi chuy√™n ng√†nh Qu·∫£n l√Ω C√¥ng ngh·ªá v√† ƒê·ªïi m·ªõi</Text>
                    </Flex>
                    <Flex align="center" gap={7} className="box-review__summary-item">
                      <CloseOutlined className="box-review__summary-icon--unchecked"/>
                      <Text className="box-review__summary-text">C√≥ b·∫±ng C·ª≠ nh√¢n Qu·∫£n tr·ªã Kinh doanh v·ªõi chuy√™n ng√†nh Qu·∫£n l√Ω C√¥ng ngh·ªá v√† ƒê·ªïi m·ªõi</Text>
                    </Flex>
                  </Space>
                </Flex>
                <div style={{width: "100%", background: "#F8F9FA", padding: "15px 0 15px 5px", borderRadius: 14, marginTop: 20}}>
                  <Flex gap={5} style={{paddingLeft: 7}}>
                  <div>
                    <Suggestion />
                  </div>
                    <Title level={5}>G·ª£i √Ω</Title>
                  </Flex>
                  <ul className="box-review__suggestion">
                      <li className="box-review__suggestion-item">B·∫°n c√≥ k·ªπ nƒÉng ph√¢n t√≠ch d·ªØ li·ªáu v·ªØng ch·∫Øc v√† th√†nh th·∫°o SQL c√πng c√°c c√¥ng c·ª• tr·ª±c quan h√≥a d·ªØ li·ªáu nh∆∞ Tableau.</li>
                      <li className="box-review__suggestion-item">Kinh nghi·ªám l√†m vi·ªác trong c√°c v·ªã tr√≠ nghi√™n c·ª©u v√† qu·∫£n l√Ω t√†i kho·∫£n th·ªÉ hi·ªán kh·∫£ nƒÉng x·ª≠ l√Ω d·ªØ li·ªáu v√† nghi√™n c·ª©u th√¥ng tin. Kinh nghi·ªám l√†m vi·ªác trong c√°c v·ªã tr√≠ nghi√™n c·ª©u v√† qu·∫£n l√Ω t√†i kho·∫£n th·ªÉ hi·ªán kh·∫£ nƒÉng x·ª≠ l√Ω d·ªØ li·ªáu v√† nghi√™n c·ª©u th√¥ng tin. th·ªÉ hi·ªán kh·∫£ nƒÉng x·ª≠ l√Ω d·ªØ li·ªáu v√† nghi√™n c·ª©u th√¥ng tin</li>
                    </ul>
                </div>
              </Card>
          </Space>
          </div>
        </div>
      </div>
      <DropCvModal open={open} setOpen={setOpen} handleImportCv={handleImportCv}/>
    </>
  );
};
export default ReviewCv;
